# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'login.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QDialog,QMessageBox
import bcrypt
import sys
import pymongo
from getpass import getpass
import re

from main import *


class Ui_MainWindow(object):
        global hashpass
        def setupUi(self, MainWindow):
                MainWindow.setObjectName("MainWindow")
                MainWindow.resize(1050, 624)
                MainWindow.setMinimumSize(QtCore.QSize(1050, 624))
                MainWindow.setMaximumSize(QtCore.QSize(1050, 624))
                MainWindow.setToolTipDuration(1)
                MainWindow.setAutoFillBackground(False)
                MainWindow.setStyleSheet("*\n"
        "{\n"
        "background: url(:/icon/Free-Green-Backgrounds-free-download.png) no-repeat center center fixed;\n"
        "background-size: cover;\n"
        "}\n"
        "QFrame\n"
        "{\n"
        "    background: rgba(0,0,0,40);\n"
        "    font-family: century gothic;\n"
        "    font-size: 24px;\n"
        "    color: white;\n"
        "}\n"
        "#pushButton1\n"
        "{\n"
        "    background: #46c351;\n"
        "    font-family: century gothic;\n"
        "    font-size: 24px;\n"
        "    color: white;\n"
        "border: none;\n"
        "}\n"
        "#pushButton1:hover\n"
        "{\n"
        "    background:#2b9ed8;\n"
        "}\n"
        "QLineEdit\n"
        "{\n"
        "    font-family: century gothic;\n"
        "    font-size: 18px;\n"
        "    background: transparent;\n"
        "    border: none;\n"
        "    color: black;\n"
        "    border-bottom: 1px solid #717072\n"
        "}\n"
        "#label1\n"
        "{\n"
        "    background:none;\n"
        "}\n"
        "#label2\n"
        "{\n"
        "background:none;\n"
        "    border-radius:70px;\n"
        "}")
                MainWindow.setDocumentMode(False)
                MainWindow.setUnifiedTitleAndToolBarOnMac(False)
                self.centralwidget = QtWidgets.QWidget(MainWindow)
                self.centralwidget.setObjectName("centralwidget")
                self.frame = QtWidgets.QFrame(self.centralwidget)
                self.frame.setGeometry(QtCore.QRect(570, 110, 381, 431))
                self.frame.setStyleSheet("")
                self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame.setObjectName("frame")
                self.label1 = QtWidgets.QLabel(self.frame)
                self.label1.setGeometry(QtCore.QRect(120, 90, 161, 51))
                font = QtGui.QFont()
                font.setFamily("Futura-Medium")
                font.setPointSize(20)
                font.setBold(False)
                font.setItalic(False)
                font.setWeight(7)
                self.label1.setFont(font)
                self.label1.setStyleSheet("\n"
        "font: 57 20pt \"Futura-Medium\";")
                self.label1.setObjectName("label1")
                self.pushButton1 = QtWidgets.QPushButton(self.frame)
                self.pushButton1.setGeometry(QtCore.QRect(20, 350, 341, 51))
                self.pushButton1.setObjectName("pushButton1")
                self.lineEdit1 = QtWidgets.QLineEdit(self.frame)
                self.lineEdit1.setGeometry(QtCore.QRect(30, 180, 321, 31))
                self.lineEdit1.setText("")
                self.lineEdit1.setObjectName("lineEdit1")
                self.lineEdit2 = QtWidgets.QLineEdit(self.frame)
                self.lineEdit2.setGeometry(QtCore.QRect(30, 250, 321, 31))
                self.lineEdit2.setText("")
                self.lineEdit2.setEchoMode(QtWidgets.QLineEdit.Password)
                self.lineEdit2.setObjectName("lineEdit2")
                self.label2 = QtWidgets.QLabel(self.centralwidget)
                self.label2.setGeometry(QtCore.QRect(700, 50, 131, 131))
                self.label2.setStyleSheet("")
                self.label2.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.label2.setFrameShadow(QtWidgets.QFrame.Raised)
                self.label2.setLineWidth(1)
                self.label2.setText("")
                self.label2.setPixmap(QtGui.QPixmap(":/icon/account.png"))
                self.label2.setScaledContents(True)
                self.label2.setObjectName("label2")
                self.label = QtWidgets.QLabel(self.centralwidget)
                self.label.setGeometry(QtCore.QRect(100, 110, 471, 431))
                self.label.setStyleSheet("*{\n"
        "    background-color:none;\n"
        "}")
                self.label.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.label.setFrameShadow(QtWidgets.QFrame.Raised)
                self.label.setText("")
                self.label.setPixmap(QtGui.QPixmap(":/icon/CARE.jpeg"))
                self.label.setScaledContents(True)
                self.label.setObjectName("label")
                MainWindow.setCentralWidget(self.centralwidget)
                self.statusbar = QtWidgets.QStatusBar(MainWindow)
                self.statusbar.setObjectName("statusbar")
                MainWindow.setStatusBar(self.statusbar)
                self.actionExit = QtWidgets.QAction(MainWindow)
                self.actionExit.setObjectName("actionExit")

                self.retranslateUi(MainWindow)
                QtCore.QMetaObject.connectSlotsByName(MainWindow)

                self.pushButton1.clicked.connect(self.login)

        def login(self):
                global hashpass
                uname = self.lineEdit1.text()
                pawd = self.lineEdit2.text() 
                
                """Connection String"""
                client = pymongo.MongoClient(
                "mongodb+srv://CCI:root@cluster0.4gzmr.mongodb.net/CARE?retryWrites=true&w=majority")
                db = client["CARE"]
                col = db["cciemployees"]

                """Searching for document with the specified CCI Id"""
                query = {"email": f"{uname}"}
                doc = col.find(query)
                
                for x in doc:
                        hashpass = x["password"]
                        hashpass = hashpass.encode('utf-8')
                        cci_id = x["cci_id"]
                        e_id = x["employee_id"] 
                        
                """Validating Password"""

                pawd = pawd.encode('utf-8')
                if(bcrypt.checkpw(pawd, hashpass)):
                        print("Login Successful")
                        f = open("CCI.txt","w+")
                        f.write(cci_id+"\n" +e_id +"\n")
                        f.close()
        
                        self.da = QtWidgets.QMainWindow()
                        self.window = MainWindow()
                        self.window.show()
                        Form.hide()


                else:
                        message = QMessageBox.critical(self, "Error" ,"Wrong credential!!",QMessageBox.Ok,QMessageBox.StandardButton)                       
                        self.lineEdit1.clear()
                        self.lineEdit2.clear()
                        
    
        def retranslateUi(self, MainWindow):
                _translate = QtCore.QCoreApplication.translate
                MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
                self.label1.setText(_translate("MainWindow", "LOGIN HERE"))
                self.pushButton1.setText(_translate("MainWindow", "LOGIN"))
                self.lineEdit1.setPlaceholderText(_translate("MainWindow", "Username"))
                self.lineEdit2.setPlaceholderText(_translate("MainWindow", "Password"))
                self.actionExit.setText(_translate("MainWindow", "Exit"))
import login_final_rc


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())

